{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAWH,GAFxF,sBAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZlB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAElC,OACE,sBAAKc,UAAU,OAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAc,IAAbnB,EAAY,EAAZA,SAEvB,ECJ0B,SAACA,GAE3B,MAA0Bd,mBAAS,CAE7BqB,KAAM,GACNa,SAAS,IAHf,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAW,WACTxB,EAASC,GACJwB,MAAM,SAAAC,GACLH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGjB,CAACpB,IAEIqB,EDdwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACE,qCACA,6BAAKpB,IACHoB,GAAW,2CACb,qBAAKJ,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEXpCgB,EAAe,WAE1B,MAAoCzC,mBAAS,CAAC,YAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCVpD6B,IAASC,OACP,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.ee3ff28c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e)=>{\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 2){\r\n      setCategories( cats => [inputValue, ...cats] );\r\n      setInputValue('');\r\n    }\r\n  }\r\n  \r\n  return(\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='text' value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  )\r\n}","export const getGifs = async(category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=JD3yGLUPy0zvhkSVyTmoB4kAJikoea0j&q=${ encodeURI( category ) }&limit=10`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url\r\n      }\r\n    })\r\n    return gifs;\r\n  }","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n  return(\r\n    <div className='card'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category})=>{\r\n\r\n  const {data:images, loading} = useFetchGifs( category );\r\n\r\n  return(\r\n    <>\r\n    <h3>{category}</h3>\r\n    { loading && <p>Loading...</p> }\r\n    <div className='card-grid'>\r\n      {\r\n        images.map( img => <GifGridItem key={img.id} {...img}/> )\r\n      }\r\n    </div>\r\n    </>\r\n  )\r\n}","import {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n  const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n  })\r\n\r\n  useEffect( ()=>{\r\n    getGifs( category )\r\n        .then( imgs =>{\r\n          setState({\r\n            data: imgs,\r\n            loading: false\r\n          })\r\n        })\r\n  },[category])\r\n\r\n  return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ()=>{\r\n\r\n  const [categories, setCategories] = useState(['Gandalf']);\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <hr />\r\n      <AddCategory setCategories={setCategories}/>\r\n      <ol>\r\n        {\r\n          categories.map( category => <GifGrid key={category} category={category}/> )\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}